function flatten(...lists: list) {
    return _flatten(lists as list ^ _flatten(list, []), []);
}

function _flatten(list: list, output: list) {
    list as element ^ {
        if (typeOf(element) == "list") {
            output = _flatten(element, output);
        } else {
            output = output + [element];
        }
    }

    return output;
}

extend list {
    function flatten() {
        return flatten(this);
    }

    function contains(value) {
        return (this as item ^ item % item == value).size > 0;
    }

    function indexOf(value) {
        this as (item, index) ^ {
            if(item == value) {
                return index;
            }
        }

        return -1;
    }

    function join(separator: string = ", ") {
        output = ""
        this as (item, index) ^ {
            output = output + item;
            if (index < this.size - 1) {
                output = output + separator;
            }
        }

        return output;
    }

    function isEmpty() {
        return this.size == 0;
    }

    function isNotEmpty() {
        return not this.isEmpty();
    }
}