import smnp.music.tool;
import smnp.text;
import smnp.io;
import smnp.system;

if(__param__.containsKey("help")) {
    println("Run sound alarm");
    println();
    println("Optional parameters:");
    println("  - cycles: int           - set number of cycles that running alarm has to reach to get quiet");
    println("                            infinite on absence of argument");
    println("  - melody: string [beep] - set melody of alert");
    println("                            available melodies:");
    println("                              - beep");
    println("                              - bell");
    println("                              - alarm1");
    println("                              - alarm2");
    exit(1);
}

infinite = __param__.containsKey("cycles");
melody = __param__.getOrDefault("melody", "beep");

if(infinite) {
    cycles = __param__.get("cycles").toInt();
    if(typeOf(cycles) != "int") {
        throw "Expected 'cycles' to be of int type";
    }

    alert(cycles, melody);
} else {
    alert(melody);
}